public class myArray {
    private final int[] array;

    public myArray(int[] array) {
        this.array = array;
    }

    public int iterrativeLinearSearch(int target) {
        for (int i = 0; i < array.length; i++) {
            if ( array[i] == target ) {
                return i;
            }
        }
        return -1;
    }

    public int recursive(int i, int target) {
        if ( i >= array.length ) {
            return -1;
        } else {
            if ( array[1] == target ) {
                return i;
            }

        }
        return recursive(++i, target);
    }

    public int recursiveLinearSearch(int target) {
        return recursive(0, target);
    }
    public int iterativeBinarySearch(int target,int leftSide ) {
        int rightSide = array.length - 1;
    while (leftSide<rightSide){
        int middle = (leftSide+rightSide)/2;
        if (array[middle] ==target  ){
            return middle;
        }else{
            rightSide = middle -1;
        }
    }return leftSide;
    }
    public int recursiveBinary(int leftSide, int rightSide, int target){
        if ( leftSide<= rightSide ){
            int middle = (leftSide + rightSide)/2;
            if ( array[middle] == target ){
                return middle;
            }else if (array[middle]<target){
                return recursiveBinary(middle +1, rightSide, target);
            }else {
                return recursiveBinary(leftSide,middle-1,target);
            }
        }
        return -1;
    }
    public int recursiveBinarySearch(int target){
        return recursiveBinary(0,array.length-1,target);
    }

    public static void main(String[] args) {
        int[] array = {1,2,3,4,5,6,7,8,9,10,11,12};
        myArray a = new myArray(array);
        System.out.println(a.iterativeBinarySearch(5,0));
        System.out.println(a.recursiveBinarySearch(5));
        System.out.println(a.recursiveLinearSearch(5));
        System.out.println(a.iterrativeLinearSearch(5));
    }
}